// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: entity.proto

package org.generic;

/**
 * <pre>
 * Error and success message types
 * </pre>
 *
 * Protobuf enum {@code Error}
 */
public enum Error
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>USER_ALREADY_EXISTS = 0;</code>
   */
  USER_ALREADY_EXISTS(0),
  /**
   * <code>WRONG_USERNAME_OR_PASSWORD = 1;</code>
   */
  WRONG_USERNAME_OR_PASSWORD(1),
  /**
   * <code>PASSWORD_EXPIRED = 2;</code>
   */
  PASSWORD_EXPIRED(2),
  /**
   * <code>PASSWORD_IDENTICAL_TO_PREVIOUS_SET = 3;</code>
   */
  PASSWORD_IDENTICAL_TO_PREVIOUS_SET(3),
  /**
   * <code>RESET_REQUEST_BEFORE_BUFFER_TIME = 4;</code>
   */
  RESET_REQUEST_BEFORE_BUFFER_TIME(4),
  /**
   * <code>ACCESS_TOKEN_EXPIRED = 5;</code>
   */
  ACCESS_TOKEN_EXPIRED(5),
  /**
   * <code>INVALID_ACCESS_TOKEN = 6;</code>
   */
  INVALID_ACCESS_TOKEN(6),
  /**
   * <code>REFRESH_TOKEN_EXPIRED = 7;</code>
   */
  REFRESH_TOKEN_EXPIRED(7),
  /**
   * <code>INVALID_REFRESH_TOKEN = 8;</code>
   */
  INVALID_REFRESH_TOKEN(8),
  /**
   * <code>INVALID_REFRESH_TOKEN_ISSUE_POLICY = 9;</code>
   */
  INVALID_REFRESH_TOKEN_ISSUE_POLICY(9),
  /**
   * <code>TOO_MANY_LOGIN_ATTEMPTS = 10;</code>
   */
  TOO_MANY_LOGIN_ATTEMPTS(10),
  /**
   * <code>INTERNAL_SERVER_ERROR = 11;</code>
   */
  INTERNAL_SERVER_ERROR(11),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>USER_ALREADY_EXISTS = 0;</code>
   */
  public static final int USER_ALREADY_EXISTS_VALUE = 0;
  /**
   * <code>WRONG_USERNAME_OR_PASSWORD = 1;</code>
   */
  public static final int WRONG_USERNAME_OR_PASSWORD_VALUE = 1;
  /**
   * <code>PASSWORD_EXPIRED = 2;</code>
   */
  public static final int PASSWORD_EXPIRED_VALUE = 2;
  /**
   * <code>PASSWORD_IDENTICAL_TO_PREVIOUS_SET = 3;</code>
   */
  public static final int PASSWORD_IDENTICAL_TO_PREVIOUS_SET_VALUE = 3;
  /**
   * <code>RESET_REQUEST_BEFORE_BUFFER_TIME = 4;</code>
   */
  public static final int RESET_REQUEST_BEFORE_BUFFER_TIME_VALUE = 4;
  /**
   * <code>ACCESS_TOKEN_EXPIRED = 5;</code>
   */
  public static final int ACCESS_TOKEN_EXPIRED_VALUE = 5;
  /**
   * <code>INVALID_ACCESS_TOKEN = 6;</code>
   */
  public static final int INVALID_ACCESS_TOKEN_VALUE = 6;
  /**
   * <code>REFRESH_TOKEN_EXPIRED = 7;</code>
   */
  public static final int REFRESH_TOKEN_EXPIRED_VALUE = 7;
  /**
   * <code>INVALID_REFRESH_TOKEN = 8;</code>
   */
  public static final int INVALID_REFRESH_TOKEN_VALUE = 8;
  /**
   * <code>INVALID_REFRESH_TOKEN_ISSUE_POLICY = 9;</code>
   */
  public static final int INVALID_REFRESH_TOKEN_ISSUE_POLICY_VALUE = 9;
  /**
   * <code>TOO_MANY_LOGIN_ATTEMPTS = 10;</code>
   */
  public static final int TOO_MANY_LOGIN_ATTEMPTS_VALUE = 10;
  /**
   * <code>INTERNAL_SERVER_ERROR = 11;</code>
   */
  public static final int INTERNAL_SERVER_ERROR_VALUE = 11;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static Error valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static Error forNumber(int value) {
    switch (value) {
      case 0: return USER_ALREADY_EXISTS;
      case 1: return WRONG_USERNAME_OR_PASSWORD;
      case 2: return PASSWORD_EXPIRED;
      case 3: return PASSWORD_IDENTICAL_TO_PREVIOUS_SET;
      case 4: return RESET_REQUEST_BEFORE_BUFFER_TIME;
      case 5: return ACCESS_TOKEN_EXPIRED;
      case 6: return INVALID_ACCESS_TOKEN;
      case 7: return REFRESH_TOKEN_EXPIRED;
      case 8: return INVALID_REFRESH_TOKEN;
      case 9: return INVALID_REFRESH_TOKEN_ISSUE_POLICY;
      case 10: return TOO_MANY_LOGIN_ATTEMPTS;
      case 11: return INTERNAL_SERVER_ERROR;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<Error>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      Error> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<Error>() {
          public Error findValueByNumber(int number) {
            return Error.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return org.generic.Entity.getDescriptor().getEnumTypes().get(0);
  }

  private static final Error[] VALUES = values();

  public static Error valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private Error(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:Error)
}

